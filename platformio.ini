; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
;default_envs = rpipico
;default_envs = rpipicow
default_envs = ESP32_S3_WROOM1_DevKitC_1_N16R8  ;FLASH 16Mb PSRAM 8Mb - 512KB SRAM, 384KB ROM - Xtensa 32-bit LX7 dual-core at 240 MHz - Adopts ESP32-S3 Rev 0
;default_envs = WAVESHARE_ESP32_S3_PICO         ;FLASH 16Mb PSRAM 2Mb - 512KB SRAM, 384KB ROM - Xtensa 32-bit LX7 dual-core at 240 MHz - Adopts ESP32-S3R2

[env]

[esp32]
platform_packages = 

[rp2040]
platform_packages = 
	framework-arduinopico @ https://github.com/earlephilhower/arduino-pico.git#4.5.1

[common]
lib_deps = 
	adafruit/Adafruit SSD1306@^2.5.13
	adafruit/Adafruit NeoPixel@^1.12.5
	adafruit/Adafruit GFX Library@^1.12.0
	adafruit/Adafruit BusIO@^1.17.0
build_flags = 
	-D GUN
	-D PLAYER_NUMBER=1
	-D USES_DISPLAY
	-D USES_SOLENOID
	-D USES_RUMBLE
	;-D USES_SWITCHES
	-D MAMEHOOKER
	-D USES_ANALOG
	-D CUSTOM_NEOPIXEL
	;-D FOURPIN_LED
	-D DUAL_CORE
	-D USES_TEMP
	-D USE_TINYUSB
	-std=gnu++17
	-std=gnu17
build_unflags = 
	-std=gnu++11
	-std=gnu11

[env:ESP32_S3_WROOM1_DevKitC_1_N16R8]
;boards_dir = \boards
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip ;stable 3.2.0 based on ESP-IDF v5.4.1
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13+github/platform-espressif32.zip
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13/platform-espressif32.zip ; stable Arduino core 3.1.3 based on IDF 5.3.2.250210
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip ; stable
board = esp32-s3-devkitc-1
		;esp32-s3-devkitc1-n16r8
		;esp32-s3-devkitc-1
		;esp32-s3-devkitc-1
		;esp32-s3-devkitc1-n16r8
		;ESP32_S3_WROOM1_DevKitC_1_N16R8
		;esp32-s3-devkitc1-n16r8
framework = arduino
monitor_speed = 9600 ;115200
lib_deps = 
	Adafruit TinyUSB Library@^3.4.4
	${common.lib_deps}
build_unflags = 
	-DARDUINO_USB_MODE=1
	${common.build_unflags}
build_flags = 
	-D ARDUINO_ESP32_S3_WROOM1_DevKitC_1_N16R8
	-D OPENFIRE_WIRELESS_ENABLE
	-D OPENFIRE_WIRELESS_DEVICE_ESPNOW
	-D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=1
	${common.build_flags}
platform_packages = ${esp32.platform_packages}
;board_build.partitions = default_8MB.csv
board_build.partitions = default_16MB.csv
board_build.filesystem = littlefs ; DICE A PLATFORMIO DI USARE LittleFS PER COPIARE I FILE DELLA DIRECTORY DATA DEL PROGETTO CON LA FUNZIONE UPLOAD SE SI VUOLE USARE
lib_ldf_mode = chain
lib_compat_mode = strict

[env:WAVESHARE_ESP32_S3_PICO]
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/54.03.20/platform-espressif32.zip ;stable 3.2.0 based on ESP-IDF v5.4.1
platform = https://github.com/pioarduino/platform-espressif32/releases/download/53.03.13/platform-espressif32.zip ; stable Arduino core 3.1.3 based on IDF 5.3.2.250210
;platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip ; stable
board = esp32-s3-devkitc-1
		;esp32-s3-devkitc1-n16r8
		;ESP32_S3_WROOM1_DevKitC_1_N16R8
framework = arduino
monitor_speed = 9600 ;115200
lib_deps = 
	Adafruit TinyUSB Library@^3.4.4
	${common.lib_deps}
build_unflags = 
	-DARDUINO_USB_MODE=1
	${common.build_unflags}
build_flags = 
	-D ARDUINO_WAVESHARE_ESP32_S3_PICO
	-D OPENFIRE_WIRELESS_ENABLE
	-D OPENFIRE_WIRELESS_DEVICE_ESPNOW
	-D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=1
	${common.build_flags}
platform_packages = ${esp32.platform_packages}
;board_build.partitions = default_8MB.csv
board_build.partitions = default_16MB.csv
board_build.filesystem = littlefs ; DICE A PLATFORMIO DI USARE LittleFS PER COPIARE I FILE DELLA DIRECTORY DATA DEL PROGETTO CON LA FUNZIONE UPLOAD SE SI VUOLE USARE
lib_ldf_mode = chain
lib_compat_mode = strict

[env:rpipicow]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git#develop
framework = arduino
board = rpipicow
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
monitor_speed = 9600
monitor_port = COM3
upload_protocol = picotool
build_type = release
lib_deps = 
	${common.lib_deps}
lib_ignore = OpenFIRE_Wireless
build_unflags = 
	-DARDUINO_USB_MODE=1
	${common.build_unflags}
build_flags = 
	-D ARDUINO_RASPBERRY_PI_PICO_W
	-D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH
	${common.build_flags}
platform_packages = ${rp2040.platform_packages}
board_build.filesystem = littlefs ; DICE A PLATFORMIO DI USARE LittleFS PER COPIARE I FILE DELLA DIRECTORY DATA DEL PROGETTO CON LA FUNZIONE UPLOAD SE SI VUOLE USARE
lib_ldf_mode = chain
lib_compat_mode = strict

[env:rpipico]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git#develop
framework = arduino
board = rpipico
board_build.core = earlephilhower
board_build.filesystem_size = 0.5m
monitor_speed = 9600
monitor_port = COM3
upload_protocol = picotool
build_type = release
lib_deps = ${common.lib_deps}
lib_ignore = OpenFIRE_Wireless
build_unflags = 
	-DARDUINO_USB_MODE=1
	${common.build_unflags}
build_flags = 
	-D ARDUINO_RASPBERRY_PI_PICO
	-D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=1
	${common.build_flags}
platform_packages = ${rp2040.platform_packages}
board_build.filesystem = littlefs ; DICE A PLATFORMIO DI USARE LittleFS PER COPIARE I FILE DELLA DIRECTORY DATA DEL PROGETTO CON LA FUNZIONE UPLOAD SE SI VUOLE USARE
lib_ldf_mode = chain
lib_compat_mode = strict
